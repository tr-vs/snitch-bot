/* Version: 2.4.1 - February 18, 2022 22:41:24 */
'use strict';

Object.defineProperty(exports, "__esModule", { value: true });
exports.version = exports.ClientPermissionsCorePrecondition = exports.CorePreconditions = exports.Resolvers = exports.StoreRegistry = exports.Store = exports.Piece = exports.MissingExportsError = exports.LoaderError = exports.container = exports.AliasStore = exports.AliasPiece = void 0;
const tslib_1 = require("tslib");
var pieces_1 = require("@sapphire/pieces");
Object.defineProperty(exports, "AliasPiece", { enumerable: true, get: function () { return pieces_1.AliasPiece; } });
Object.defineProperty(exports, "AliasStore", { enumerable: true, get: function () { return pieces_1.AliasStore; } });
Object.defineProperty(exports, "container", { enumerable: true, get: function () { return pieces_1.container; } });
Object.defineProperty(exports, "LoaderError", { enumerable: true, get: function () { return pieces_1.LoaderError; } });
Object.defineProperty(exports, "MissingExportsError", { enumerable: true, get: function () { return pieces_1.MissingExportsError; } });
Object.defineProperty(exports, "Piece", { enumerable: true, get: function () { return pieces_1.Piece; } });
Object.defineProperty(exports, "Store", { enumerable: true, get: function () { return pieces_1.Store; } });
Object.defineProperty(exports, "StoreRegistry", { enumerable: true, get: function () { return pieces_1.StoreRegistry; } });
(0, tslib_1.__exportStar)(require("./lib/errors/ArgumentError"), exports);
(0, tslib_1.__exportStar)(require("./lib/errors/Identifiers"), exports);
(0, tslib_1.__exportStar)(require("./lib/errors/PreconditionError"), exports);
(0, tslib_1.__exportStar)(require("./lib/errors/UserError"), exports);
(0, tslib_1.__exportStar)(require("./lib/parsers/Args"), exports);
(0, tslib_1.__exportStar)(require("./lib/parsers/Maybe"), exports);
(0, tslib_1.__exportStar)(require("./lib/parsers/Result"), exports);
(0, tslib_1.__exportStar)(require("./lib/plugins/Plugin"), exports);
(0, tslib_1.__exportStar)(require("./lib/plugins/PluginManager"), exports);
(0, tslib_1.__exportStar)(require("./lib/plugins/symbols"), exports);
exports.Resolvers = (0, tslib_1.__importStar)(require("./lib/resolvers"));
(0, tslib_1.__exportStar)(require("./lib/SapphireClient"), exports);
(0, tslib_1.__exportStar)(require("./lib/structures/Argument"), exports);
(0, tslib_1.__exportStar)(require("./lib/structures/ArgumentStore"), exports);
(0, tslib_1.__exportStar)(require("./lib/structures/Command"), exports);
(0, tslib_1.__exportStar)(require("./lib/structures/CommandStore"), exports);
(0, tslib_1.__exportStar)(require("./lib/structures/ExtendedArgument"), exports);
(0, tslib_1.__exportStar)(require("./lib/structures/Listener"), exports);
(0, tslib_1.__exportStar)(require("./lib/structures/ListenerStore"), exports);
(0, tslib_1.__exportStar)(require("./lib/structures/Precondition"), exports);
(0, tslib_1.__exportStar)(require("./lib/structures/PreconditionStore"), exports);
(0, tslib_1.__exportStar)(require("./lib/types/Enums"), exports);
(0, tslib_1.__exportStar)(require("./lib/types/Events"), exports);
(0, tslib_1.__exportStar)(require("./lib/utils/logger/ILogger"), exports);
(0, tslib_1.__exportStar)(require("./lib/utils/logger/Logger"), exports);
(0, tslib_1.__exportStar)(require("./lib/utils/preconditions/conditions/IPreconditionCondition"), exports);
(0, tslib_1.__exportStar)(require("./lib/utils/preconditions/conditions/PreconditionConditionAnd"), exports);
(0, tslib_1.__exportStar)(require("./lib/utils/preconditions/conditions/PreconditionConditionOr"), exports);
(0, tslib_1.__exportStar)(require("./lib/utils/preconditions/containers/ClientPermissionsPrecondition"), exports);
(0, tslib_1.__exportStar)(require("./lib/utils/preconditions/containers/UserPermissionsPrecondition"), exports);
(0, tslib_1.__exportStar)(require("./lib/utils/preconditions/IPreconditionContainer"), exports);
(0, tslib_1.__exportStar)(require("./lib/utils/preconditions/PreconditionContainerArray"), exports);
(0, tslib_1.__exportStar)(require("./lib/utils/preconditions/PreconditionContainerSingle"), exports);
exports.CorePreconditions = (0, tslib_1.__importStar)(require("./preconditions"));
/**
 * @deprecated. Please use `CorePreconditions.ClientPermissions`. `ClientPermissionsCorePrecondition` will be removed in v3.0.0
 */
var ClientPermissions_1 = require("./preconditions/ClientPermissions");
Object.defineProperty(exports, "ClientPermissionsCorePrecondition", { enumerable: true, get: function () { return ClientPermissions_1.CorePrecondition; } });
/**
 * The [@sapphire/framework](https://github.com/sapphiredev/framework) version that you are currently using.
 * An example use of this is showing it of in a bot information command.
 *
 * Note to Sapphire developers: This needs to explicitly be `string` so it is not typed as the string that gets replaced by Rollup
 */
// eslint-disable-next-line @typescript-eslint/no-inferrable-types
exports.version = '2.4.1';
